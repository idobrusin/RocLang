/*
 * generated by Xtext 2.10.0
 */
grammar InternalRoc;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package robotcontrol.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package robotcontrol.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import robotcontrol.services.RocGrammarAccess;

}
@parser::members {
	private RocGrammarAccess grammarAccess;

	public void setGrammarAccess(RocGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProgram
entryRuleProgram
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Program
ruleProgram 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramAccess().getMovementsAssignment()); }
		(rule__Program__MovementsAssignment)*
		{ after(grammarAccess.getProgramAccess().getMovementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleMovement
entryRuleMovement
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getMovementRule()); }
	 ruleMovement
{ after(grammarAccess.getMovementRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Movement
ruleMovement 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMovementAccess().getGroup()); }
		(rule__Movement__Group__0)
		{ after(grammarAccess.getMovementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleMotion
entryRuleMotion
:
{ before(grammarAccess.getMotionRule()); }
	 ruleMotion
{ after(grammarAccess.getMotionRule()); } 
	 EOF 
;

// Rule Motion
ruleMotion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMotionAccess().getGroup()); }
		(rule__Motion__Group__0)
		{ after(grammarAccess.getMotionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAction
entryRuleAction
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionAccess().getAlternatives()); }
		(rule__Action__Alternatives)
		{ after(grammarAccess.getActionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompleteAction
entryRuleCompleteAction
:
{ before(grammarAccess.getCompleteActionRule()); }
	 ruleCompleteAction
{ after(grammarAccess.getCompleteActionRule()); } 
	 EOF 
;

// Rule CompleteAction
ruleCompleteAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompleteActionAccess().getGroup()); }
		(rule__CompleteAction__Group__0)
		{ after(grammarAccess.getCompleteActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSingleAction
entryRuleSingleAction
:
{ before(grammarAccess.getSingleActionRule()); }
	 ruleSingleAction
{ after(grammarAccess.getSingleActionRule()); } 
	 EOF 
;

// Rule SingleAction
ruleSingleAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSingleActionAccess().getAlternatives()); }
		(rule__SingleAction__Alternatives)
		{ after(grammarAccess.getSingleActionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDirectedAction
entryRuleDirectedAction
:
{ before(grammarAccess.getDirectedActionRule()); }
	 ruleDirectedAction
{ after(grammarAccess.getDirectedActionRule()); } 
	 EOF 
;

// Rule DirectedAction
ruleDirectedAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDirectedActionAccess().getAlternatives()); }
		(rule__DirectedAction__Alternatives)
		{ after(grammarAccess.getDirectedActionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLeftRightDirectedAction
entryRuleLeftRightDirectedAction
:
{ before(grammarAccess.getLeftRightDirectedActionRule()); }
	 ruleLeftRightDirectedAction
{ after(grammarAccess.getLeftRightDirectedActionRule()); } 
	 EOF 
;

// Rule LeftRightDirectedAction
ruleLeftRightDirectedAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLeftRightDirectedActionAccess().getGroup()); }
		(rule__LeftRightDirectedAction__Group__0)
		{ after(grammarAccess.getLeftRightDirectedActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLeftRightDirection
entryRuleLeftRightDirection
:
{ before(grammarAccess.getLeftRightDirectionRule()); }
	 ruleLeftRightDirection
{ after(grammarAccess.getLeftRightDirectionRule()); } 
	 EOF 
;

// Rule LeftRightDirection
ruleLeftRightDirection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLeftRightDirectionAccess().getAlternatives()); }
		(rule__LeftRightDirection__Alternatives)
		{ after(grammarAccess.getLeftRightDirectionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBackForthDirectedAction
entryRuleBackForthDirectedAction
:
{ before(grammarAccess.getBackForthDirectedActionRule()); }
	 ruleBackForthDirectedAction
{ after(grammarAccess.getBackForthDirectedActionRule()); } 
	 EOF 
;

// Rule BackForthDirectedAction
ruleBackForthDirectedAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBackForthDirectedActionAccess().getHeadAssignment()); }
		(rule__BackForthDirectedAction__HeadAssignment)
		{ after(grammarAccess.getBackForthDirectedActionAccess().getHeadAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBackForthDirection
entryRuleBackForthDirection
:
{ before(grammarAccess.getBackForthDirectionRule()); }
	 ruleBackForthDirection
{ after(grammarAccess.getBackForthDirectionRule()); } 
	 EOF 
;

// Rule BackForthDirection
ruleBackForthDirection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBackForthDirectionAccess().getAlternatives()); }
		(rule__BackForthDirection__Alternatives)
		{ after(grammarAccess.getBackForthDirectionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFullDirectedAction
entryRuleFullDirectedAction
:
{ before(grammarAccess.getFullDirectedActionRule()); }
	 ruleFullDirectedAction
{ after(grammarAccess.getFullDirectedActionRule()); } 
	 EOF 
;

// Rule FullDirectedAction
ruleFullDirectedAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFullDirectedActionAccess().getAlternatives()); }
		(rule__FullDirectedAction__Alternatives)
		{ after(grammarAccess.getFullDirectedActionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDirection
entryRuleDirection
:
{ before(grammarAccess.getDirectionRule()); }
	 ruleDirection
{ after(grammarAccess.getDirectionRule()); } 
	 EOF 
;

// Rule Direction
ruleDirection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDirectionAccess().getAlternatives()); }
		(rule__Direction__Alternatives)
		{ after(grammarAccess.getDirectionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Intensity
ruleIntensity
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntensityAccess().getAlternatives()); }
		(rule__Intensity__Alternatives)
		{ after(grammarAccess.getIntensityAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule DurationUnit
ruleDurationUnit
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDurationUnitAccess().getAlternatives()); }
		(rule__DurationUnit__Alternatives)
		{ after(grammarAccess.getDurationUnitAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getActionHolderAssignment_0()); }
		(rule__Action__ActionHolderAssignment_0)
		{ after(grammarAccess.getActionAccess().getActionHolderAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getGroup_1()); }
		(rule__Action__Group_1__0)
		{ after(grammarAccess.getActionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getGroup_2()); }
		(rule__Action__Group_2__0)
		{ after(grammarAccess.getActionAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleAction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleActionAccess().getActionNameAssignment_0()); }
		(rule__SingleAction__ActionNameAssignment_0)
		{ after(grammarAccess.getSingleActionAccess().getActionNameAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getSingleActionAccess().getActionNameAssignment_1()); }
		(rule__SingleAction__ActionNameAssignment_1)
		{ after(grammarAccess.getSingleActionAccess().getActionNameAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectedAction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectedActionAccess().getGroup_0()); }
		(rule__DirectedAction__Group_0__0)
		{ after(grammarAccess.getDirectedActionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getDirectedActionAccess().getGroup_1()); }
		(rule__DirectedAction__Group_1__0)
		{ after(grammarAccess.getDirectedActionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getDirectedActionAccess().getGroup_2()); }
		(rule__DirectedAction__Group_2__0)
		{ after(grammarAccess.getDirectedActionAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRightDirection__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftRightDirectionAccess().getLeftAssignment_0()); }
		(rule__LeftRightDirection__LeftAssignment_0)
		{ after(grammarAccess.getLeftRightDirectionAccess().getLeftAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getLeftRightDirectionAccess().getRightAssignment_1()); }
		(rule__LeftRightDirection__RightAssignment_1)
		{ after(grammarAccess.getLeftRightDirectionAccess().getRightAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BackForthDirection__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBackForthDirectionAccess().getBackAssignment_0()); }
		(rule__BackForthDirection__BackAssignment_0)
		{ after(grammarAccess.getBackForthDirectionAccess().getBackAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getBackForthDirectionAccess().getForthAssignment_1()); }
		(rule__BackForthDirection__ForthAssignment_1)
		{ after(grammarAccess.getBackForthDirectionAccess().getForthAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FullDirectedAction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFullDirectedActionAccess().getGroup_0()); }
		(rule__FullDirectedAction__Group_0__0)
		{ after(grammarAccess.getFullDirectedActionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getFullDirectedActionAccess().getGroup_1()); }
		(rule__FullDirectedAction__Group_1__0)
		{ after(grammarAccess.getFullDirectedActionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectionAccess().getUPAssignment_0()); }
		(rule__Direction__UPAssignment_0)
		{ after(grammarAccess.getDirectionAccess().getUPAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getDirectionAccess().getDOWNAssignment_1()); }
		(rule__Direction__DOWNAssignment_1)
		{ after(grammarAccess.getDirectionAccess().getDOWNAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getDirectionAccess().getLEFTAssignment_2()); }
		(rule__Direction__LEFTAssignment_2)
		{ after(grammarAccess.getDirectionAccess().getLEFTAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getDirectionAccess().getRIGHTAssignment_3()); }
		(rule__Direction__RIGHTAssignment_3)
		{ after(grammarAccess.getDirectionAccess().getRIGHTAssignment_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Intensity__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntensityAccess().getCEnumLiteralDeclaration_0()); }
		('pronounced')
		{ after(grammarAccess.getIntensityAccess().getCEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getIntensityAccess().getAEnumLiteralDeclaration_1()); }
		('trace of')
		{ after(grammarAccess.getIntensityAccess().getAEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getIntensityAccess().getBEnumLiteralDeclaration_2()); }
		('slightly')
		{ after(grammarAccess.getIntensityAccess().getBEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getIntensityAccess().getDEnumLiteralDeclaration_3()); }
		('severe')
		{ after(grammarAccess.getIntensityAccess().getDEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getIntensityAccess().getEEnumLiteralDeclaration_4()); }
		('maximum')
		{ after(grammarAccess.getIntensityAccess().getEEnumLiteralDeclaration_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DurationUnit__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDurationUnitAccess().getMILLISECONDSEnumLiteralDeclaration_0()); }
		('milliseconds')
		{ after(grammarAccess.getDurationUnitAccess().getMILLISECONDSEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getDurationUnitAccess().getSECONDSEnumLiteralDeclaration_1()); }
		('seconds')
		{ after(grammarAccess.getDurationUnitAccess().getSECONDSEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getDurationUnitAccess().getMINUTESEnumLiteralDeclaration_2()); }
		('minutes')
		{ after(grammarAccess.getDurationUnitAccess().getMINUTESEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Movement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Movement__Group__0__Impl
	rule__Movement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Movement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMovementAccess().getMotionsAssignment_0()); }
	(rule__Movement__MotionsAssignment_0)
	{ after(grammarAccess.getMovementAccess().getMotionsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Movement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Movement__Group__1__Impl
	rule__Movement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Movement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMovementAccess().getGroup_1()); }
	(rule__Movement__Group_1__0)*
	{ after(grammarAccess.getMovementAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Movement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Movement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Movement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMovementAccess().getPERIODTerminalRuleCall_2()); }
	RULE_PERIOD
	{ after(grammarAccess.getMovementAccess().getPERIODTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Movement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Movement__Group_1__0__Impl
	rule__Movement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Movement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMovementAccess().getANDTerminalRuleCall_1_0()); }
	RULE_AND
	{ after(grammarAccess.getMovementAccess().getANDTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Movement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Movement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Movement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMovementAccess().getMotionsAssignment_1_1()); }
	(rule__Movement__MotionsAssignment_1_1)
	{ after(grammarAccess.getMovementAccess().getMotionsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Motion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Motion__Group__0__Impl
	rule__Motion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Motion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMotionAccess().getActionAssignment_0()); }
	(rule__Motion__ActionAssignment_0)
	{ after(grammarAccess.getMotionAccess().getActionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Motion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Motion__Group__1__Impl
	rule__Motion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Motion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMotionAccess().getFORTerminalRuleCall_1()); }
	RULE_FOR
	{ after(grammarAccess.getMotionAccess().getFORTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Motion__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Motion__Group__2__Impl
	rule__Motion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Motion__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMotionAccess().getDurationAssignment_2()); }
	(rule__Motion__DurationAssignment_2)
	{ after(grammarAccess.getMotionAccess().getDurationAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Motion__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Motion__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Motion__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMotionAccess().getDurationUnitAssignment_3()); }
	(rule__Motion__DurationUnitAssignment_3)
	{ after(grammarAccess.getMotionAccess().getDurationUnitAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_1__0__Impl
	rule__Action__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getIntensityAssignment_1_0()); }
	(rule__Action__IntensityAssignment_1_0)?
	{ after(grammarAccess.getActionAccess().getIntensityAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getActionHolderAssignment_1_1()); }
	(rule__Action__ActionHolderAssignment_1_1)
	{ after(grammarAccess.getActionAccess().getActionHolderAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_2__0__Impl
	rule__Action__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getIntensityAssignment_2_0()); }
	(rule__Action__IntensityAssignment_2_0)?
	{ after(grammarAccess.getActionAccess().getIntensityAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getActionHolderAssignment_2_1()); }
	(rule__Action__ActionHolderAssignment_2_1)
	{ after(grammarAccess.getActionAccess().getActionHolderAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompleteAction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompleteAction__Group__0__Impl
	rule__CompleteAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompleteAction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompleteActionAccess().getActionNameAssignment_0()); }
	(rule__CompleteAction__ActionNameAssignment_0)
	{ after(grammarAccess.getCompleteActionAccess().getActionNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompleteAction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompleteAction__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompleteAction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompleteActionAccess().getFaceKeyword_1()); }
	'face'
	{ after(grammarAccess.getCompleteActionAccess().getFaceKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DirectedAction__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectedAction__Group_0__0__Impl
	rule__DirectedAction__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectedAction__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectedActionAccess().getActionNameAssignment_0_0()); }
	(rule__DirectedAction__ActionNameAssignment_0_0)
	{ after(grammarAccess.getDirectedActionAccess().getActionNameAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectedAction__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectedAction__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectedAction__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectedActionAccess().getDirectionAssignment_0_1()); }
	(rule__DirectedAction__DirectionAssignment_0_1)
	{ after(grammarAccess.getDirectedActionAccess().getDirectionAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DirectedAction__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectedAction__Group_1__0__Impl
	rule__DirectedAction__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectedAction__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectedActionAccess().getActionNameAssignment_1_0()); }
	(rule__DirectedAction__ActionNameAssignment_1_0)
	{ after(grammarAccess.getDirectedActionAccess().getActionNameAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectedAction__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectedAction__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectedAction__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectedActionAccess().getDirectionAssignment_1_1()); }
	(rule__DirectedAction__DirectionAssignment_1_1)
	{ after(grammarAccess.getDirectedActionAccess().getDirectionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DirectedAction__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectedAction__Group_2__0__Impl
	rule__DirectedAction__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectedAction__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectedActionAccess().getActionNameAssignment_2_0()); }
	(rule__DirectedAction__ActionNameAssignment_2_0)
	{ after(grammarAccess.getDirectedActionAccess().getActionNameAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectedAction__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DirectedAction__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectedAction__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectedActionAccess().getDirectionAssignment_2_1()); }
	(rule__DirectedAction__DirectionAssignment_2_1)
	{ after(grammarAccess.getDirectedActionAccess().getDirectionAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LeftRightDirectedAction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftRightDirectedAction__Group__0__Impl
	rule__LeftRightDirectedAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRightDirectedAction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftRightDirectedActionAccess().getTiltHeadAssignment_0()); }
	(rule__LeftRightDirectedAction__TiltHeadAssignment_0)
	{ after(grammarAccess.getLeftRightDirectedActionAccess().getTiltHeadAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRightDirectedAction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftRightDirectedAction__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRightDirectedAction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftRightDirectedActionAccess().getHeadKeyword_1()); }
	'head'
	{ after(grammarAccess.getLeftRightDirectedActionAccess().getHeadKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FullDirectedAction__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FullDirectedAction__Group_0__0__Impl
	rule__FullDirectedAction__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FullDirectedAction__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFullDirectedActionAccess().getTurnHeadAssignment_0_0()); }
	(rule__FullDirectedAction__TurnHeadAssignment_0_0)
	{ after(grammarAccess.getFullDirectedActionAccess().getTurnHeadAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FullDirectedAction__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FullDirectedAction__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FullDirectedAction__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFullDirectedActionAccess().getHeadKeyword_0_1()); }
	'head'
	{ after(grammarAccess.getFullDirectedActionAccess().getHeadKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FullDirectedAction__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FullDirectedAction__Group_1__0__Impl
	rule__FullDirectedAction__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FullDirectedAction__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFullDirectedActionAccess().getTurnEyesAssignment_1_0()); }
	(rule__FullDirectedAction__TurnEyesAssignment_1_0)
	{ after(grammarAccess.getFullDirectedActionAccess().getTurnEyesAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FullDirectedAction__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FullDirectedAction__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FullDirectedAction__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFullDirectedActionAccess().getEyesKeyword_1_1()); }
	'eyes'
	{ after(grammarAccess.getFullDirectedActionAccess().getEyesKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__MovementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getMovementsMovementParserRuleCall_0()); }
		ruleMovement
		{ after(grammarAccess.getProgramAccess().getMovementsMovementParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Movement__MotionsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMovementAccess().getMotionsMotionParserRuleCall_0_0()); }
		ruleMotion
		{ after(grammarAccess.getMovementAccess().getMotionsMotionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Movement__MotionsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMovementAccess().getMotionsMotionParserRuleCall_1_1_0()); }
		ruleMotion
		{ after(grammarAccess.getMovementAccess().getMotionsMotionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Motion__ActionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMotionAccess().getActionActionParserRuleCall_0_0()); }
		ruleAction
		{ after(grammarAccess.getMotionAccess().getActionActionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Motion__DurationAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMotionAccess().getDurationDurationTerminalRuleCall_2_0()); }
		RULE_DURATION
		{ after(grammarAccess.getMotionAccess().getDurationDurationTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Motion__DurationUnitAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMotionAccess().getDurationUnitDurationUnitEnumRuleCall_3_0()); }
		ruleDurationUnit
		{ after(grammarAccess.getMotionAccess().getDurationUnitDurationUnitEnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__ActionHolderAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getActionHolderCompleteActionParserRuleCall_0_0()); }
		ruleCompleteAction
		{ after(grammarAccess.getActionAccess().getActionHolderCompleteActionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__IntensityAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getIntensityIntensityEnumRuleCall_1_0_0()); }
		ruleIntensity
		{ after(grammarAccess.getActionAccess().getIntensityIntensityEnumRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__ActionHolderAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getActionHolderSingleActionParserRuleCall_1_1_0()); }
		ruleSingleAction
		{ after(grammarAccess.getActionAccess().getActionHolderSingleActionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__IntensityAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getIntensityIntensityEnumRuleCall_2_0_0()); }
		ruleIntensity
		{ after(grammarAccess.getActionAccess().getIntensityIntensityEnumRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__ActionHolderAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getActionHolderDirectedActionParserRuleCall_2_1_0()); }
		ruleDirectedAction
		{ after(grammarAccess.getActionAccess().getActionHolderDirectedActionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompleteAction__ActionNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompleteActionAccess().getActionNameNeutralKeyword_0_0()); }
		(
			{ before(grammarAccess.getCompleteActionAccess().getActionNameNeutralKeyword_0_0()); }
			'neutral'
			{ after(grammarAccess.getCompleteActionAccess().getActionNameNeutralKeyword_0_0()); }
		)
		{ after(grammarAccess.getCompleteActionAccess().getActionNameNeutralKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleAction__ActionNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleActionAccess().getActionNameDropJawKeyword_0_0()); }
		(
			{ before(grammarAccess.getSingleActionAccess().getActionNameDropJawKeyword_0_0()); }
			'drop jaw'
			{ after(grammarAccess.getSingleActionAccess().getActionNameDropJawKeyword_0_0()); }
		)
		{ after(grammarAccess.getSingleActionAccess().getActionNameDropJawKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleAction__ActionNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleActionAccess().getActionNameNodHeadKeyword_1_0()); }
		(
			{ before(grammarAccess.getSingleActionAccess().getActionNameNodHeadKeyword_1_0()); }
			'nod Head'
			{ after(grammarAccess.getSingleActionAccess().getActionNameNodHeadKeyword_1_0()); }
		)
		{ after(grammarAccess.getSingleActionAccess().getActionNameNodHeadKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectedAction__ActionNameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectedActionAccess().getActionNameLeftRightDirectedActionParserRuleCall_0_0_0()); }
		ruleLeftRightDirectedAction
		{ after(grammarAccess.getDirectedActionAccess().getActionNameLeftRightDirectedActionParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectedAction__DirectionAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectedActionAccess().getDirectionLeftRightDirectionParserRuleCall_0_1_0()); }
		ruleLeftRightDirection
		{ after(grammarAccess.getDirectedActionAccess().getDirectionLeftRightDirectionParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectedAction__ActionNameAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectedActionAccess().getActionNameBackForthDirectedActionParserRuleCall_1_0_0()); }
		ruleBackForthDirectedAction
		{ after(grammarAccess.getDirectedActionAccess().getActionNameBackForthDirectedActionParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectedAction__DirectionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectedActionAccess().getDirectionBackForthDirectionParserRuleCall_1_1_0()); }
		ruleBackForthDirection
		{ after(grammarAccess.getDirectedActionAccess().getDirectionBackForthDirectionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectedAction__ActionNameAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectedActionAccess().getActionNameFullDirectedActionParserRuleCall_2_0_0()); }
		ruleFullDirectedAction
		{ after(grammarAccess.getDirectedActionAccess().getActionNameFullDirectedActionParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectedAction__DirectionAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectedActionAccess().getDirectionDirectionParserRuleCall_2_1_0()); }
		ruleDirection
		{ after(grammarAccess.getDirectedActionAccess().getDirectionDirectionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRightDirectedAction__TiltHeadAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftRightDirectedActionAccess().getTiltHeadTiltKeyword_0_0()); }
		(
			{ before(grammarAccess.getLeftRightDirectedActionAccess().getTiltHeadTiltKeyword_0_0()); }
			'tilt'
			{ after(grammarAccess.getLeftRightDirectedActionAccess().getTiltHeadTiltKeyword_0_0()); }
		)
		{ after(grammarAccess.getLeftRightDirectedActionAccess().getTiltHeadTiltKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRightDirection__LeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftRightDirectionAccess().getLeftLeftKeyword_0_0()); }
		(
			{ before(grammarAccess.getLeftRightDirectionAccess().getLeftLeftKeyword_0_0()); }
			'left'
			{ after(grammarAccess.getLeftRightDirectionAccess().getLeftLeftKeyword_0_0()); }
		)
		{ after(grammarAccess.getLeftRightDirectionAccess().getLeftLeftKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftRightDirection__RightAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftRightDirectionAccess().getRightRightKeyword_1_0()); }
		(
			{ before(grammarAccess.getLeftRightDirectionAccess().getRightRightKeyword_1_0()); }
			'right'
			{ after(grammarAccess.getLeftRightDirectionAccess().getRightRightKeyword_1_0()); }
		)
		{ after(grammarAccess.getLeftRightDirectionAccess().getRightRightKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BackForthDirectedAction__HeadAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBackForthDirectedActionAccess().getHeadHeadKeyword_0()); }
		(
			{ before(grammarAccess.getBackForthDirectedActionAccess().getHeadHeadKeyword_0()); }
			'head'
			{ after(grammarAccess.getBackForthDirectedActionAccess().getHeadHeadKeyword_0()); }
		)
		{ after(grammarAccess.getBackForthDirectedActionAccess().getHeadHeadKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BackForthDirection__BackAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBackForthDirectionAccess().getBackBackKeyword_0_0()); }
		(
			{ before(grammarAccess.getBackForthDirectionAccess().getBackBackKeyword_0_0()); }
			'back'
			{ after(grammarAccess.getBackForthDirectionAccess().getBackBackKeyword_0_0()); }
		)
		{ after(grammarAccess.getBackForthDirectionAccess().getBackBackKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BackForthDirection__ForthAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBackForthDirectionAccess().getForthForthKeyword_1_0()); }
		(
			{ before(grammarAccess.getBackForthDirectionAccess().getForthForthKeyword_1_0()); }
			'forth'
			{ after(grammarAccess.getBackForthDirectionAccess().getForthForthKeyword_1_0()); }
		)
		{ after(grammarAccess.getBackForthDirectionAccess().getForthForthKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FullDirectedAction__TurnHeadAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFullDirectedActionAccess().getTurnHeadTurnKeyword_0_0_0()); }
		(
			{ before(grammarAccess.getFullDirectedActionAccess().getTurnHeadTurnKeyword_0_0_0()); }
			'turn'
			{ after(grammarAccess.getFullDirectedActionAccess().getTurnHeadTurnKeyword_0_0_0()); }
		)
		{ after(grammarAccess.getFullDirectedActionAccess().getTurnHeadTurnKeyword_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FullDirectedAction__TurnEyesAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFullDirectedActionAccess().getTurnEyesTurnKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getFullDirectedActionAccess().getTurnEyesTurnKeyword_1_0_0()); }
			'turn'
			{ after(grammarAccess.getFullDirectedActionAccess().getTurnEyesTurnKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getFullDirectedActionAccess().getTurnEyesTurnKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direction__UPAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectionAccess().getUPUpKeyword_0_0()); }
		(
			{ before(grammarAccess.getDirectionAccess().getUPUpKeyword_0_0()); }
			'up'
			{ after(grammarAccess.getDirectionAccess().getUPUpKeyword_0_0()); }
		)
		{ after(grammarAccess.getDirectionAccess().getUPUpKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direction__DOWNAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectionAccess().getDOWNDownKeyword_1_0()); }
		(
			{ before(grammarAccess.getDirectionAccess().getDOWNDownKeyword_1_0()); }
			'down'
			{ after(grammarAccess.getDirectionAccess().getDOWNDownKeyword_1_0()); }
		)
		{ after(grammarAccess.getDirectionAccess().getDOWNDownKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direction__LEFTAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectionAccess().getLEFTLeftKeyword_2_0()); }
		(
			{ before(grammarAccess.getDirectionAccess().getLEFTLeftKeyword_2_0()); }
			'left'
			{ after(grammarAccess.getDirectionAccess().getLEFTLeftKeyword_2_0()); }
		)
		{ after(grammarAccess.getDirectionAccess().getLEFTLeftKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direction__RIGHTAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectionAccess().getRIGHTRightKeyword_3_0()); }
		(
			{ before(grammarAccess.getDirectionAccess().getRIGHTRightKeyword_3_0()); }
			'right'
			{ after(grammarAccess.getDirectionAccess().getRIGHTRightKeyword_3_0()); }
		)
		{ after(grammarAccess.getDirectionAccess().getRIGHTRightKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_DURATION : RULE_INT;

RULE_FOR : 'for';

RULE_AND : 'and';

RULE_PERIOD : '.';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

fragment RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
