/**
 * generated by Xtext 2.10.0
 */
package robotcontrol.roc.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import robotcontrol.roc.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see robotcontrol.roc.RocPackage
 * @generated
 */
public class RocSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static RocPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RocSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = RocPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case RocPackage.PROGRAM:
      {
        Program program = (Program)theEObject;
        T result = caseProgram(program);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RocPackage.MOVEMENT:
      {
        Movement movement = (Movement)theEObject;
        T result = caseMovement(movement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RocPackage.MOTION:
      {
        Motion motion = (Motion)theEObject;
        T result = caseMotion(motion);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RocPackage.ACTION:
      {
        Action action = (Action)theEObject;
        T result = caseAction(action);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RocPackage.COMPLETE_ACTION:
      {
        CompleteAction completeAction = (CompleteAction)theEObject;
        T result = caseCompleteAction(completeAction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RocPackage.SINGLE_ACTION:
      {
        SingleAction singleAction = (SingleAction)theEObject;
        T result = caseSingleAction(singleAction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RocPackage.DIRECTED_ACTION:
      {
        DirectedAction directedAction = (DirectedAction)theEObject;
        T result = caseDirectedAction(directedAction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RocPackage.LEFT_RIGHT_DIRECTED_ACTION:
      {
        LeftRightDirectedAction leftRightDirectedAction = (LeftRightDirectedAction)theEObject;
        T result = caseLeftRightDirectedAction(leftRightDirectedAction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RocPackage.LEFT_RIGHT_DIRECTION:
      {
        LeftRightDirection leftRightDirection = (LeftRightDirection)theEObject;
        T result = caseLeftRightDirection(leftRightDirection);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RocPackage.FULL_DIRECTED_ACTION:
      {
        FullDirectedAction fullDirectedAction = (FullDirectedAction)theEObject;
        T result = caseFullDirectedAction(fullDirectedAction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RocPackage.DIRECTION:
      {
        Direction direction = (Direction)theEObject;
        T result = caseDirection(direction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RocPackage.SPEED:
      {
        Speed speed = (Speed)theEObject;
        T result = caseSpeed(speed);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Program</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Program</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseProgram(Program object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Movement</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Movement</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMovement(Movement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Motion</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Motion</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMotion(Motion object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Action</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Action</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAction(Action object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Complete Action</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Complete Action</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCompleteAction(CompleteAction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Single Action</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Single Action</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSingleAction(SingleAction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Directed Action</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Directed Action</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDirectedAction(DirectedAction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Left Right Directed Action</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Left Right Directed Action</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLeftRightDirectedAction(LeftRightDirectedAction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Left Right Direction</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Left Right Direction</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLeftRightDirection(LeftRightDirection object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Full Directed Action</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Full Directed Action</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFullDirectedAction(FullDirectedAction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Direction</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Direction</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDirection(Direction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Speed</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Speed</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSpeed(Speed object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //RocSwitch
