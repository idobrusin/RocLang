/**
 * generated by Xtext 2.10.0
 */
package robotcontrol.roc.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import robotcontrol.roc.RocPackage;
import robotcontrol.roc.Speed;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Speed</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link robotcontrol.roc.impl.SpeedImpl#getSLOWEST <em>SLOWEST</em>}</li>
 *   <li>{@link robotcontrol.roc.impl.SpeedImpl#getSLOW <em>SLOW</em>}</li>
 *   <li>{@link robotcontrol.roc.impl.SpeedImpl#getNORMAL <em>NORMAL</em>}</li>
 *   <li>{@link robotcontrol.roc.impl.SpeedImpl#getFAST <em>FAST</em>}</li>
 *   <li>{@link robotcontrol.roc.impl.SpeedImpl#getFULL <em>FULL</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SpeedImpl extends MinimalEObjectImpl.Container implements Speed
{
  /**
   * The default value of the '{@link #getSLOWEST() <em>SLOWEST</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSLOWEST()
   * @generated
   * @ordered
   */
  protected static final String SLOWEST_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSLOWEST() <em>SLOWEST</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSLOWEST()
   * @generated
   * @ordered
   */
  protected String slowest = SLOWEST_EDEFAULT;

  /**
   * The default value of the '{@link #getSLOW() <em>SLOW</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSLOW()
   * @generated
   * @ordered
   */
  protected static final String SLOW_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSLOW() <em>SLOW</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSLOW()
   * @generated
   * @ordered
   */
  protected String slow = SLOW_EDEFAULT;

  /**
   * The default value of the '{@link #getNORMAL() <em>NORMAL</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNORMAL()
   * @generated
   * @ordered
   */
  protected static final String NORMAL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNORMAL() <em>NORMAL</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNORMAL()
   * @generated
   * @ordered
   */
  protected String normal = NORMAL_EDEFAULT;

  /**
   * The default value of the '{@link #getFAST() <em>FAST</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFAST()
   * @generated
   * @ordered
   */
  protected static final String FAST_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFAST() <em>FAST</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFAST()
   * @generated
   * @ordered
   */
  protected String fast = FAST_EDEFAULT;

  /**
   * The default value of the '{@link #getFULL() <em>FULL</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFULL()
   * @generated
   * @ordered
   */
  protected static final String FULL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFULL() <em>FULL</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFULL()
   * @generated
   * @ordered
   */
  protected String full = FULL_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SpeedImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return RocPackage.Literals.SPEED;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getSLOWEST()
  {
    return slowest;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSLOWEST(String newSLOWEST)
  {
    String oldSLOWEST = slowest;
    slowest = newSLOWEST;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RocPackage.SPEED__SLOWEST, oldSLOWEST, slowest));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getSLOW()
  {
    return slow;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSLOW(String newSLOW)
  {
    String oldSLOW = slow;
    slow = newSLOW;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RocPackage.SPEED__SLOW, oldSLOW, slow));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getNORMAL()
  {
    return normal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNORMAL(String newNORMAL)
  {
    String oldNORMAL = normal;
    normal = newNORMAL;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RocPackage.SPEED__NORMAL, oldNORMAL, normal));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getFAST()
  {
    return fast;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFAST(String newFAST)
  {
    String oldFAST = fast;
    fast = newFAST;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RocPackage.SPEED__FAST, oldFAST, fast));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getFULL()
  {
    return full;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFULL(String newFULL)
  {
    String oldFULL = full;
    full = newFULL;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RocPackage.SPEED__FULL, oldFULL, full));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case RocPackage.SPEED__SLOWEST:
        return getSLOWEST();
      case RocPackage.SPEED__SLOW:
        return getSLOW();
      case RocPackage.SPEED__NORMAL:
        return getNORMAL();
      case RocPackage.SPEED__FAST:
        return getFAST();
      case RocPackage.SPEED__FULL:
        return getFULL();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case RocPackage.SPEED__SLOWEST:
        setSLOWEST((String)newValue);
        return;
      case RocPackage.SPEED__SLOW:
        setSLOW((String)newValue);
        return;
      case RocPackage.SPEED__NORMAL:
        setNORMAL((String)newValue);
        return;
      case RocPackage.SPEED__FAST:
        setFAST((String)newValue);
        return;
      case RocPackage.SPEED__FULL:
        setFULL((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case RocPackage.SPEED__SLOWEST:
        setSLOWEST(SLOWEST_EDEFAULT);
        return;
      case RocPackage.SPEED__SLOW:
        setSLOW(SLOW_EDEFAULT);
        return;
      case RocPackage.SPEED__NORMAL:
        setNORMAL(NORMAL_EDEFAULT);
        return;
      case RocPackage.SPEED__FAST:
        setFAST(FAST_EDEFAULT);
        return;
      case RocPackage.SPEED__FULL:
        setFULL(FULL_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case RocPackage.SPEED__SLOWEST:
        return SLOWEST_EDEFAULT == null ? slowest != null : !SLOWEST_EDEFAULT.equals(slowest);
      case RocPackage.SPEED__SLOW:
        return SLOW_EDEFAULT == null ? slow != null : !SLOW_EDEFAULT.equals(slow);
      case RocPackage.SPEED__NORMAL:
        return NORMAL_EDEFAULT == null ? normal != null : !NORMAL_EDEFAULT.equals(normal);
      case RocPackage.SPEED__FAST:
        return FAST_EDEFAULT == null ? fast != null : !FAST_EDEFAULT.equals(fast);
      case RocPackage.SPEED__FULL:
        return FULL_EDEFAULT == null ? full != null : !FULL_EDEFAULT.equals(full);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (SLOWEST: ");
    result.append(slowest);
    result.append(", SLOW: ");
    result.append(slow);
    result.append(", NORMAL: ");
    result.append(normal);
    result.append(", FAST: ");
    result.append(fast);
    result.append(", FULL: ");
    result.append(full);
    result.append(')');
    return result.toString();
  }

} //SpeedImpl
