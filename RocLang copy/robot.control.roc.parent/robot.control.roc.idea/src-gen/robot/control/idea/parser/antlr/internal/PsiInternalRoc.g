/*
 * generated by Xtext 2.10.0
 */
grammar PsiInternalRoc;

options {
	superClass=AbstractPsiAntlrParser;
}

@lexer::header {
package robot.control.idea.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package robot.control.idea.parser.antlr.internal;

import org.eclipse.xtext.idea.parser.AbstractPsiAntlrParser;
import robot.control.idea.lang.RocElementTypeProvider;
import org.eclipse.xtext.idea.parser.TokenTypeProvider;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import robot.control.services.RocGrammarAccess;

import com.intellij.lang.PsiBuilder;
}

@parser::members {

	protected RocGrammarAccess grammarAccess;

	protected RocElementTypeProvider elementTypeProvider;

	public PsiInternalRocParser(PsiBuilder builder, TokenStream input, RocElementTypeProvider elementTypeProvider, RocGrammarAccess grammarAccess) {
		this(input);
		setPsiBuilder(builder);
		this.grammarAccess = grammarAccess;
		this.elementTypeProvider = elementTypeProvider;
	}

	@Override
	protected String getFirstRuleName() {
		return "Program";
	}

}

//Entry rule entryRuleProgram
entryRuleProgram returns [Boolean current=false]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
}:
	{ markComposite(elementTypeProvider.getProgramElementType()); }
	iv_ruleProgram=ruleProgram
	{ $current=$iv_ruleProgram.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule Program
ruleProgram returns [Boolean current=false]
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
}:
	(
		(
			{
				markComposite(elementTypeProvider.getProgram_MovementsMovementParserRuleCall_0ElementType());
			}
			lv_movements_0_0=ruleMovement
			{
				doneComposite();
				if(!$current) {
					associateWithSemanticElement();
					$current = true;
				}
			}
		)
	)*
;
finally {
	myHiddenTokenState.restore();
}

//Entry rule entryRuleMovement
entryRuleMovement returns [Boolean current=false]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
}:
	{ markComposite(elementTypeProvider.getMovementElementType()); }
	iv_ruleMovement=ruleMovement
	{ $current=$iv_ruleMovement.current; }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule Movement
ruleMovement returns [Boolean current=false]
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
}:
	(
		(
			(
				{
					markComposite(elementTypeProvider.getMovement_MotionsMotionParserRuleCall_0_0ElementType());
				}
				lv_motions_0_0=ruleMotion
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		(
			{
				markLeaf(elementTypeProvider.getMovement_ANDTerminalRuleCall_1_0ElementType());
			}
			this_AND_1=RULE_AND
			{
				doneLeaf(this_AND_1);
			}
			(
				(
					{
						markComposite(elementTypeProvider.getMovement_MotionsMotionParserRuleCall_1_1_0ElementType());
					}
					lv_motions_2_0=ruleMotion
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
		)*
		{
			markLeaf(elementTypeProvider.getMovement_PERIODTerminalRuleCall_2ElementType());
		}
		this_PERIOD_3=RULE_PERIOD
		{
			doneLeaf(this_PERIOD_3);
		}
	)
;
finally {
	myHiddenTokenState.restore();
}

//Entry rule entryRuleMotion
entryRuleMotion returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getMotionElementType()); }
	iv_ruleMotion=ruleMotion
	{ $current=$iv_ruleMotion.current; }
	EOF;

// Rule Motion
ruleMotion returns [Boolean current=false]
:
	(
		(
			(
				{
					markComposite(elementTypeProvider.getMotion_ActionActionParserRuleCall_0_0ElementType());
				}
				lv_action_0_0=ruleAction
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getMotion_FORTerminalRuleCall_1ElementType());
		}
		this_FOR_1=RULE_FOR
		{
			doneLeaf(this_FOR_1);
		}
		(
			(
				{
					markLeaf(elementTypeProvider.getMotion_DurationDurationTerminalRuleCall_2_0ElementType());
				}
				lv_duration_2_0=RULE_DURATION
				{
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
				{
					doneLeaf(lv_duration_2_0);
				}
			)
		)
		(
			(
				{
					markComposite(elementTypeProvider.getMotion_DurationUnitDurationUnitEnumRuleCall_3_0ElementType());
				}
				lv_durationUnit_3_0=ruleDurationUnit
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
	)
;

//Entry rule entryRuleAction
entryRuleAction returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getActionElementType()); }
	iv_ruleAction=ruleAction
	{ $current=$iv_ruleAction.current; }
	EOF;

// Rule Action
ruleAction returns [Boolean current=false]
:
	(
		(
			(
				{
					markComposite(elementTypeProvider.getAction_ActionHolderCompleteActionParserRuleCall_0_0ElementType());
				}
				lv_actionHolder_0_0=ruleCompleteAction
				{
					doneComposite();
					if(!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		    |
		(
			(
				(
					{
						markComposite(elementTypeProvider.getAction_IntensityIntensityEnumRuleCall_1_0_0ElementType());
					}
					lv_intensity_1_0=ruleIntensity
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)?
			(
				(
					{
						markComposite(elementTypeProvider.getAction_ActionHolderSingleActionParserRuleCall_1_1_0ElementType());
					}
					lv_actionHolder_2_0=ruleSingleAction
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						markComposite(elementTypeProvider.getAction_IntensityIntensityEnumRuleCall_2_0_0ElementType());
					}
					lv_intensity_3_0=ruleIntensity
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)?
			(
				(
					{
						markComposite(elementTypeProvider.getAction_ActionHolderDirectedActionParserRuleCall_2_1_0ElementType());
					}
					lv_actionHolder_4_0=ruleDirectedAction
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
		)
	)
;

//Entry rule entryRuleCompleteAction
entryRuleCompleteAction returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getCompleteActionElementType()); }
	iv_ruleCompleteAction=ruleCompleteAction
	{ $current=$iv_ruleCompleteAction.current; }
	EOF;

// Rule CompleteAction
ruleCompleteAction returns [Boolean current=false]
:
	(
		(
			(
				{
					markLeaf(elementTypeProvider.getCompleteAction_ActionNameNeutralKeyword_0_0ElementType());
				}
				lv_actionName_0_0='neutral'
				{
					doneLeaf(lv_actionName_0_0);
				}
				{
					if (!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getCompleteAction_FaceKeyword_1ElementType());
		}
		otherlv_1='face'
		{
			doneLeaf(otherlv_1);
		}
	)
;

//Entry rule entryRuleSingleAction
entryRuleSingleAction returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getSingleActionElementType()); }
	iv_ruleSingleAction=ruleSingleAction
	{ $current=$iv_ruleSingleAction.current; }
	EOF;

// Rule SingleAction
ruleSingleAction returns [Boolean current=false]
:
	(
		(
			(
				{
					markLeaf(elementTypeProvider.getSingleAction_ActionNameDropJawKeyword_0_0ElementType());
				}
				lv_actionName_0_0='drop jaw'
				{
					doneLeaf(lv_actionName_0_0);
				}
				{
					if (!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		    |
		(
			(
				{
					markLeaf(elementTypeProvider.getSingleAction_ActionNameNodHeadKeyword_1_0ElementType());
				}
				lv_actionName_1_0='nod Head'
				{
					doneLeaf(lv_actionName_1_0);
				}
				{
					if (!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
	)
;

//Entry rule entryRuleDirectedAction
entryRuleDirectedAction returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getDirectedActionElementType()); }
	iv_ruleDirectedAction=ruleDirectedAction
	{ $current=$iv_ruleDirectedAction.current; }
	EOF;

// Rule DirectedAction
ruleDirectedAction returns [Boolean current=false]
:
	(
		(
			(
				(
					{
						markComposite(elementTypeProvider.getDirectedAction_ActionNameLeftRightDirectedActionParserRuleCall_0_0_0ElementType());
					}
					lv_actionName_0_0=ruleLeftRightDirectedAction
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
			(
				(
					{
						markComposite(elementTypeProvider.getDirectedAction_DirectionLeftRightDirectionParserRuleCall_0_1_0ElementType());
					}
					lv_direction_1_0=ruleLeftRightDirection
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						markComposite(elementTypeProvider.getDirectedAction_ActionNameBackForthDirectedActionParserRuleCall_1_0_0ElementType());
					}
					lv_actionName_2_0=ruleBackForthDirectedAction
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
			(
				(
					{
						markComposite(elementTypeProvider.getDirectedAction_DirectionBackForthDirectionParserRuleCall_1_1_0ElementType());
					}
					lv_direction_3_0=ruleBackForthDirection
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						markComposite(elementTypeProvider.getDirectedAction_ActionNameFullDirectedActionParserRuleCall_2_0_0ElementType());
					}
					lv_actionName_4_0=ruleFullDirectedAction
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
			(
				(
					{
						markComposite(elementTypeProvider.getDirectedAction_DirectionDirectionParserRuleCall_2_1_0ElementType());
					}
					lv_direction_5_0=ruleDirection
					{
						doneComposite();
						if(!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
		)
	)
;

//Entry rule entryRuleLeftRightDirectedAction
entryRuleLeftRightDirectedAction returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getLeftRightDirectedActionElementType()); }
	iv_ruleLeftRightDirectedAction=ruleLeftRightDirectedAction
	{ $current=$iv_ruleLeftRightDirectedAction.current; }
	EOF;

// Rule LeftRightDirectedAction
ruleLeftRightDirectedAction returns [Boolean current=false]
:
	(
		(
			(
				{
					markLeaf(elementTypeProvider.getLeftRightDirectedAction_TiltHeadTiltKeyword_0_0ElementType());
				}
				lv_tiltHead_0_0='tilt'
				{
					doneLeaf(lv_tiltHead_0_0);
				}
				{
					if (!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		{
			markLeaf(elementTypeProvider.getLeftRightDirectedAction_HeadKeyword_1ElementType());
		}
		otherlv_1='head'
		{
			doneLeaf(otherlv_1);
		}
	)
;

//Entry rule entryRuleLeftRightDirection
entryRuleLeftRightDirection returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getLeftRightDirectionElementType()); }
	iv_ruleLeftRightDirection=ruleLeftRightDirection
	{ $current=$iv_ruleLeftRightDirection.current; }
	EOF;

// Rule LeftRightDirection
ruleLeftRightDirection returns [Boolean current=false]
:
	(
		(
			(
				{
					markLeaf(elementTypeProvider.getLeftRightDirection_LeftLeftKeyword_0_0ElementType());
				}
				lv_left_0_0='left'
				{
					doneLeaf(lv_left_0_0);
				}
				{
					if (!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		    |
		(
			(
				{
					markLeaf(elementTypeProvider.getLeftRightDirection_RightRightKeyword_1_0ElementType());
				}
				lv_right_1_0='right'
				{
					doneLeaf(lv_right_1_0);
				}
				{
					if (!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
	)
;

//Entry rule entryRuleBackForthDirectedAction
entryRuleBackForthDirectedAction returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getBackForthDirectedActionElementType()); }
	iv_ruleBackForthDirectedAction=ruleBackForthDirectedAction
	{ $current=$iv_ruleBackForthDirectedAction.current; }
	EOF;

// Rule BackForthDirectedAction
ruleBackForthDirectedAction returns [Boolean current=false]
:
	(
		(
			{
				markLeaf(elementTypeProvider.getBackForthDirectedAction_HeadHeadKeyword_0ElementType());
			}
			lv_head_0_0='head'
			{
				doneLeaf(lv_head_0_0);
			}
			{
				if (!$current) {
					associateWithSemanticElement();
					$current = true;
				}
			}
		)
	)
;

//Entry rule entryRuleBackForthDirection
entryRuleBackForthDirection returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getBackForthDirectionElementType()); }
	iv_ruleBackForthDirection=ruleBackForthDirection
	{ $current=$iv_ruleBackForthDirection.current; }
	EOF;

// Rule BackForthDirection
ruleBackForthDirection returns [Boolean current=false]
:
	(
		(
			(
				{
					markLeaf(elementTypeProvider.getBackForthDirection_BackBackKeyword_0_0ElementType());
				}
				lv_back_0_0='back'
				{
					doneLeaf(lv_back_0_0);
				}
				{
					if (!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		    |
		(
			(
				{
					markLeaf(elementTypeProvider.getBackForthDirection_ForthForthKeyword_1_0ElementType());
				}
				lv_forth_1_0='forth'
				{
					doneLeaf(lv_forth_1_0);
				}
				{
					if (!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
	)
;

//Entry rule entryRuleFullDirectedAction
entryRuleFullDirectedAction returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getFullDirectedActionElementType()); }
	iv_ruleFullDirectedAction=ruleFullDirectedAction
	{ $current=$iv_ruleFullDirectedAction.current; }
	EOF;

// Rule FullDirectedAction
ruleFullDirectedAction returns [Boolean current=false]
:
	(
		(
			(
				(
					{
						markLeaf(elementTypeProvider.getFullDirectedAction_TurnHeadTurnKeyword_0_0_0ElementType());
					}
					lv_turnHead_0_0='turn'
					{
						doneLeaf(lv_turnHead_0_0);
					}
					{
						if (!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
			{
				markLeaf(elementTypeProvider.getFullDirectedAction_HeadKeyword_0_1ElementType());
			}
			otherlv_1='head'
			{
				doneLeaf(otherlv_1);
			}
		)
		    |
		(
			(
				(
					{
						markLeaf(elementTypeProvider.getFullDirectedAction_TurnEyesTurnKeyword_1_0_0ElementType());
					}
					lv_turnEyes_2_0='turn'
					{
						doneLeaf(lv_turnEyes_2_0);
					}
					{
						if (!$current) {
							associateWithSemanticElement();
							$current = true;
						}
					}
				)
			)
			{
				markLeaf(elementTypeProvider.getFullDirectedAction_EyesKeyword_1_1ElementType());
			}
			otherlv_3='eyes'
			{
				doneLeaf(otherlv_3);
			}
		)
	)
;

//Entry rule entryRuleDirection
entryRuleDirection returns [Boolean current=false]:
	{ markComposite(elementTypeProvider.getDirectionElementType()); }
	iv_ruleDirection=ruleDirection
	{ $current=$iv_ruleDirection.current; }
	EOF;

// Rule Direction
ruleDirection returns [Boolean current=false]
:
	(
		(
			(
				{
					markLeaf(elementTypeProvider.getDirection_UPUpKeyword_0_0ElementType());
				}
				lv_UP_0_0='up'
				{
					doneLeaf(lv_UP_0_0);
				}
				{
					if (!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		    |
		(
			(
				{
					markLeaf(elementTypeProvider.getDirection_DOWNDownKeyword_1_0ElementType());
				}
				lv_DOWN_1_0='down'
				{
					doneLeaf(lv_DOWN_1_0);
				}
				{
					if (!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		    |
		(
			(
				{
					markLeaf(elementTypeProvider.getDirection_LEFTLeftKeyword_2_0ElementType());
				}
				lv_LEFT_2_0='left'
				{
					doneLeaf(lv_LEFT_2_0);
				}
				{
					if (!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
		    |
		(
			(
				{
					markLeaf(elementTypeProvider.getDirection_RIGHTRightKeyword_3_0ElementType());
				}
				lv_RIGHT_3_0='right'
				{
					doneLeaf(lv_RIGHT_3_0);
				}
				{
					if (!$current) {
						associateWithSemanticElement();
						$current = true;
					}
				}
			)
		)
	)
;

// Rule Intensity
ruleIntensity returns [Boolean current=false]
:
	(
		(
			{
				markLeaf(elementTypeProvider.getIntensity_CEnumLiteralDeclaration_0ElementType());
			}
			enumLiteral_0='pronounced'
			{
				doneLeaf(enumLiteral_0);
			}
		)
		    |
		(
			{
				markLeaf(elementTypeProvider.getIntensity_AEnumLiteralDeclaration_1ElementType());
			}
			enumLiteral_1='trace of'
			{
				doneLeaf(enumLiteral_1);
			}
		)
		    |
		(
			{
				markLeaf(elementTypeProvider.getIntensity_BEnumLiteralDeclaration_2ElementType());
			}
			enumLiteral_2='slightly'
			{
				doneLeaf(enumLiteral_2);
			}
		)
		    |
		(
			{
				markLeaf(elementTypeProvider.getIntensity_DEnumLiteralDeclaration_3ElementType());
			}
			enumLiteral_3='severe'
			{
				doneLeaf(enumLiteral_3);
			}
		)
		    |
		(
			{
				markLeaf(elementTypeProvider.getIntensity_EEnumLiteralDeclaration_4ElementType());
			}
			enumLiteral_4='maximum'
			{
				doneLeaf(enumLiteral_4);
			}
		)
	)
;

// Rule DurationUnit
ruleDurationUnit returns [Boolean current=false]
:
	(
		(
			{
				markLeaf(elementTypeProvider.getDurationUnit_MILLISECONDSEnumLiteralDeclaration_0ElementType());
			}
			enumLiteral_0='milliseconds'
			{
				doneLeaf(enumLiteral_0);
			}
		)
		    |
		(
			{
				markLeaf(elementTypeProvider.getDurationUnit_SECONDSEnumLiteralDeclaration_1ElementType());
			}
			enumLiteral_1='seconds'
			{
				doneLeaf(enumLiteral_1);
			}
		)
		    |
		(
			{
				markLeaf(elementTypeProvider.getDurationUnit_MINUTESEnumLiteralDeclaration_2ElementType());
			}
			enumLiteral_2='minutes'
			{
				doneLeaf(enumLiteral_2);
			}
		)
	)
;

RULE_DURATION : RULE_INT;

RULE_FOR : 'for';

RULE_AND : 'and';

RULE_PERIOD : '.';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

fragment RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
