/**
 * generated by Xtext 2.10.0
 */
package robot.control.roc.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import robot.control.roc.BackForthDirection;
import robot.control.roc.RocPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Back Forth Direction</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link robot.control.roc.impl.BackForthDirectionImpl#getBack <em>Back</em>}</li>
 *   <li>{@link robot.control.roc.impl.BackForthDirectionImpl#getForth <em>Forth</em>}</li>
 * </ul>
 *
 * @generated
 */
public class BackForthDirectionImpl extends MinimalEObjectImpl.Container implements BackForthDirection
{
  /**
   * The default value of the '{@link #getBack() <em>Back</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBack()
   * @generated
   * @ordered
   */
  protected static final String BACK_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getBack() <em>Back</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBack()
   * @generated
   * @ordered
   */
  protected String back = BACK_EDEFAULT;

  /**
   * The default value of the '{@link #getForth() <em>Forth</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getForth()
   * @generated
   * @ordered
   */
  protected static final String FORTH_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getForth() <em>Forth</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getForth()
   * @generated
   * @ordered
   */
  protected String forth = FORTH_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BackForthDirectionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return RocPackage.Literals.BACK_FORTH_DIRECTION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getBack()
  {
    return back;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBack(String newBack)
  {
    String oldBack = back;
    back = newBack;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RocPackage.BACK_FORTH_DIRECTION__BACK, oldBack, back));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getForth()
  {
    return forth;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setForth(String newForth)
  {
    String oldForth = forth;
    forth = newForth;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RocPackage.BACK_FORTH_DIRECTION__FORTH, oldForth, forth));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case RocPackage.BACK_FORTH_DIRECTION__BACK:
        return getBack();
      case RocPackage.BACK_FORTH_DIRECTION__FORTH:
        return getForth();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case RocPackage.BACK_FORTH_DIRECTION__BACK:
        setBack((String)newValue);
        return;
      case RocPackage.BACK_FORTH_DIRECTION__FORTH:
        setForth((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case RocPackage.BACK_FORTH_DIRECTION__BACK:
        setBack(BACK_EDEFAULT);
        return;
      case RocPackage.BACK_FORTH_DIRECTION__FORTH:
        setForth(FORTH_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case RocPackage.BACK_FORTH_DIRECTION__BACK:
        return BACK_EDEFAULT == null ? back != null : !BACK_EDEFAULT.equals(back);
      case RocPackage.BACK_FORTH_DIRECTION__FORTH:
        return FORTH_EDEFAULT == null ? forth != null : !FORTH_EDEFAULT.equals(forth);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (back: ");
    result.append(back);
    result.append(", forth: ");
    result.append(forth);
    result.append(')');
    return result.toString();
  }

} //BackForthDirectionImpl
